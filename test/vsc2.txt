컨트롤+D = 똑같은 단어 찾아서 한번에 바꿔줌
쉬프트 알트 + 방향키 = 그 줄 복사
쉬프트 알트 + F = 정렬
쉬프트 컨트롤 + 방향키 = 구간선택


<!--부트스트랩 5-->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<!--jquery-->
<script src="https://code.jquery.com/jquery-3.6.3.js"></script>


태그(요소 Element) : <>
속성(Property): style src width 등 태그 안에 쓰는것.   : 뒤에는 Value(값(수치)가 와야됨).
같은 속성을 주는 예시 ex) style="color:blue;background-color:balck" 처럼 여러개 쓸때는 사이에 ;

메소드=함수=명령

선택자 우선순위=id>class>tag
 
<h6 align="center">출력 될 문장</h6>             //h6의 크기로 글 출력하면서 가운데정렬
<font size="5" color="#000fff" face="Comic Sans MS">Font tag</font>             //(크기 색 글꼴)
em="n"  //상위 태그의 n배의 글자 크기  rem="n"    //최상위 태그의 n배의 글자 크기
<br>          //한줄띄우기    <p>        //문단? 띄우기              <hr>       //가로줄
<b>글자를 굵게</b>    <u>사이는 밑줄</u>    <strike>사이는 취소선</strike>   
<strong>사이는 굵게</strong>            <i>사이는 기울게</i>  
X<sup>3</sup> //윗첨자                     X<sub>1</sub>               //아래첨자
&nbsp;             //한칸 띄우기(스페이스 역활)
&lt; //  <         &gt; //  >
text-decoration: 글자꾸밈(none-꾸민거다없앰,underline-밑줄)
parentElement:부모태그

데이터타입:Number String Boolean(true, false)


#은 id, .은class
<pre></pre>   // 프리뷰(보이는 그대로 출력)
<span></span>      //아무 기능 없음 line
<div></div>         //아무 기능 없음 block
<img src="./이미지.jpg">          //현재 폴더의 이미지.jpg 가져오기
<img src="./하위폴더/이미지.jpg">             //하위 폴더의 이미지.jpg 가져오기
<img src="../상위폴더/이미지.jpg">               //상위 폴더의 이미지.jpg 가져오기
<img src="../../상위상위폴더/상위상위폴더의하위폴더/이미지.jpg">                  //상위상위폴더의하위폴더 이미지.jpg 가져오기
title="마우스 올렸을때 나오는 이름"            alt="해당 사진이 없을 경우 출력되는 이름"
float:left;                  // 가로방향 정렬, 나중에 해제 clear:both-------------------------
text-align: center;             //텍스트 가운대로 정렬 --------------------------------------float랑 text-align의 차이?
align//가로방향           valign:세로방향
height와 line_height를 같게 주면 가운데로 오게됨
background-image : url(사진경로);
background-repeat: repeat-x(x방향으로만 반복), no-repeat(반복안함)       //기본값은 x y 모두 반복
background-size: contain(비율에 맞게 하나만),   100% 100% (x,y축 꽉차게)
opacity:n; //이미지 흐리게(0~1까지)
border-collapse: collapse;  //선과 선이 붙음(border의 기본값은 separate)
prompt("A","B")        //A는 출력되는 문구, B는 기입하는곳의 기본 값
alert("A")          //A라는 알림창이 뜸
isNaN(A)       //A가 숫자=false, 문자=ture
function(isNaN(A)){
    A가 숫자가 아닐 경우 함수
}



<b id="irum"></b>            //<b>asdf</b> 라고 출력됨
irum.innerText = "asdf";


a:link{ 클릭전,              a:visited{ 클릭후,             a:hover{마우스 올렸을때
<a href="http://www.naver.com">Naver</a>               //클릭시 현재 페이지가 네이버 페이지로 전환
<a href="http://www.naver.com" target="_blank">Naver</a>            //클릭 시 새 페이지 열림
<a href="http://www.naver.com" target="_new">Naver</a>	            //클릭 시 새 페이지 열림
<iframe src="http://nate.com" width="500" height="300" border="1"></iframe>    //저 사이즈의 프레임 안에 링크가 나오게 됨

div.menu>ul>li:hover{      //hover-마우스 올렸을때, active-클릭 했을때
            background-color: rgb(203, 223, 123);
            cursor: pointer; 커서 모양
            color: black;
            box-shadow: 5px 5px 5px gray;
}

.class{
    position: N;            //absolute:절대좌표, relative:상대좌표
    left:npx;
    top:npx;
}


<figure>                      //이미지에 글자 같이 넣기
    <img src="../photo/이미지.jpg">
    <figcaption>
        <b>글자</b>
    </figcaption>
</figure>            

figure>img{                      // > 는 바로 아래의 하위태그를 의미. 하위 태그 하나당 > 추가로 하나씩 더 써야한다 
            width: 100px;        // figure img         공백을 주면 모든 하위태그
            height: 100px;
            border-radius: 20px;
        }

-리스트
<ol>        Orderde List//순서가 있는 목록(기본값1, <ol type="A"> 로 ABC도 가능, i(I)로 그리스어 숫자 가능)
 <li></li>   //나중에 저 사이에 추가해도 자동으로 숫자
 <li></li>   
</ol>

<ul>         Unordered List//순서가 없는 목록(기본값 disc, 도형, type= circle나 square 가능)
 <li></li>  
 <li></li>
</ul>



<marquee direction="right" behavior="alternate" scrollamount="20">   //오른쪽으로, 왕복, 스크롤속도
						   	     //marquee(움직임)의 기본값은 left, scroll 
                                 
-table테이블
<table>          //열:columns , 행:row
 <caption>제목</caption> //표 중앙에 오게되고 굵은글씨 기본값
 <tr> //1행
  <th>굵은 글씨 셀 내용</th>        //th는 자동 가운데로 정렬됨
  <th>굵은 글씨 셀 내용</th>
 </tr>
 <tr>  //2행
  <td>셀 내용</td>
  <td>셀 내용</td>
 </tr>
 <tr>  //3행
  <td colspan="세로줄 셀 갯수">   //세로줄 합쳐서 한칸으로(rowspan은 가로줄 합쳐서 한칸으로)
 </tr>
</table>

*************************5x5 Table예시****************************
<table style="width:500">
<script>
for (let row = 1; row <= 5; row++) {
	document.write("<tr>");
for (let col = 1; col <= 5; col++) {
	document.write(`<td><h1>asdf</h1>`);
	document.write("</td>");
}document.write("</tr>");
}
</script>
</table>
****************************************************************

     
var A = B.getAttribute("src")11     //A의 값은 B의 src값 이라고 선언(getAttribute는 속성값을 얻어옴)               //get시리즈는 변수를 받아야 해서
var A = document.getElementById("B");      //A의 값은 "B"의 요소값이다 라고 선언(getElementById는 해당 태그에 접근)  //태그? 변수? var? 있어야함
A.setAttribute("src","C")  //A의 속성 src를 C로 변경(setAttribute는 속성 A를 B로변경) 
var s = p1.getAttribute("src");           //s값은 p1의 src속성이다 라고 선언
var s2 = star.innerText;                    //s2값은 starr의 text값 이라고 선언

var A = document.getElementById("B");      //A의 값은 "B"의 요소 라고 선언(getElementById는 해당 태그에 접근)

*****************************************************************************************************
**특정요소에서 속성의 값을 반환하면 그 값을 받는다
변수명=요소값.getAttribute("속성값")

**특정요소에서 속성의 값을 변경 하고자 할 경우           //Attribute는 속성
요소값.setAttribute("속성값","변경할 값")

**특정 요소 안에 HTML 태그를 포함해서 넣으려면
요소값.innerHTML="html을 포함한 문자열";
예시)   a.innerHTML="happy<br>nice";        happy
                                    출력=>  nice
        a.innerHTML+="br>하하하";           하하하

        또는 es6의 리터럴 문자 사용
        a.innerHTML=`happy<br>
        nice

**특정 요소 안에 단순한 텍스트만 넣으려면
요소값.innerText="문자열"

**isNaN (Nat a Number) : 숫자가 아닐 경우 ture 반환, 100%숫자일 경우 false
예시) isNaN("5a") =>true
      inNaN("100") =>false

** 특정 태그에서 id를 이용해서 요소값(인스턴스)를 얻으려면
변수명=document.getElementById("아이디")

**eval("수식") : 문자열 형태의 수식을 계산해서 반환한다
예시) eval("4*5") => 20
      eval("5+6") => 11

**숫자 형태의 문자열을 계산 가능한 숫자로 변경하려면
예시) var a="5"; //String 으로 인식함(타입 확인하는법 typeof(변수명) 콘솔로그?)
      var b="6"; //String
      console.log(a+b); => 56 (+인 경우는 문자열로 인식해서 나열을함)
      console.log(a-b); => -1 (+를 제외한 연산자는 숫자로 자동 계산)

      b=parseInt(a) : 문자열 a를 정수타입으로 반환(b는 타입이 number)

      예시) parseInt("7") => 숫자 7을 변환
            parseInt("7.5") => 숫자 7을 변환
            parseFloat("7.5") => 숫자 7을 반환
            Number("7"); => 숫자 7을 반환
            Number("7.5"); =>숫자 7.5를 반환
****************************************************************************************

<select id="selborder">                             //select 예시
        <option selected disabled hidden>select border</option> <!--첫줄 고정 제목을 추가--><!--시작값 선택불가 사라짐-->
        <option value="5px inset gray">테두리선1</option>
        <option value="10px solid orange">테두리선2</option>
        <option value="5px dotted pink">테두리선3</option>
        <option value="1px solid green">테두리선4</option>
        <option value="10px groove gold">테두리선5</option>
 </select>
 <script>
        document.getElementById("selborder").onchange=function() {       //select 는 거의 onchange만 사용
            //style 값 변경 시
         document.getElementById("animal").style.border=this.value;
        }
 </script>

A.onfocus = function () {      //A클릭시 발생하는 이벤트
B.onblur = function () {	//B갔다가 B에서 벗어나 다른곳 클릭시 발생하는 이벤트

함수 종류 3가지
1.function add1(su1,su2){		2.var add2=function(su1,su2){		3.var add3=(su1,su2)=>su1+su2; //화살표 함수에서 리턴하는 한 문장만 있을 경우 return 생략 가능
	return su1+su2;			          return su1+su2				console.log(add3(10,20)); //30
}				                }
var sum=add1(5,6);              console.log(add2(4,6)); //10		       
console.log(sum);  //11

1-1. function sum(left, right){     //left, right 같은 걸 매개변수(parameter)라고 함
    document.write(left+right);
}       
sum(2,3); //5   //함수안에 들어가는 2나 3을 인자(argument)라고 함
sum(3,4); //7

1-2. function sum2(left, right){
    return left+right
}
document.write(sum(2,3)+'<br>')
document.write('<div style="color:red">'+sum(2,3)+'</div>')
document.write('<div style="font-size:3rem">'+sum(2,3)+'</div>')


반복식 while
-예제1번
var a=0
while(true)
{
    a++;
    if(a%2==1)
    continue; //홀수면 조건식으로 가라->처음으로 돌아가라
    console.log(a);
    if(a==10)
    break;
}
console.log()에는 2 4 6 8 10 이 있을것.

-예저2번
var b = ["1", "2", "3", "4","5"]
var i = 0;                //i의 초기값을 정해준 뒤
while (i < b.length) {    //i++처럼 갯수 늘려가며 배열b의 길이만큼 반복
    document.write("<li>" + b[i] + "</li>");
    i = i + 1 //i++;
}

배열 : 같은 형 같은 길이의 데이터를 2개 이상 붙여서 동일한 변수로 처리

var arr = new Array(2); //3개의 데이터를 담을 배열 생성
arr[0]="red";
arr[1]="blue";
arr[2]="grenn";

var arr = new Array();
arr.push(1);      //psuh는 차례대로   
arr.push(2);      //0번째 부터       
arr.push(3);      //데이터가 추가됨 
arr.push(4);

var arr = new Array();
arr.pop();        //pop만큼 뒤에서부터
arr.pop();         //데이터가 제거됨
arr.pop();

예시)var arr=["A","B","C","D"]
배열-일반적인 for문
for(i=0;i<arr.length;i++)
    document.write(`div>${arr[i]}</div>`)
    
배열-for of        //자동으로 갯수만큼 반복
for(var a of arr)  //var a of arr 은 arr을 a에 담는다는 뜻. 배열에 있는 요소 전체에 영향을 주고싶을때 사용하면 될듯?
    document.write(`<div>${a}</div>)

배열-for in        //자동으로 갯수만큼 반복
fonr(var idx in arr)   //arr의 데이터의 인덱스 값이 idx 로 넘어간다. 0, 1, 2, 3....
    document.write(`<div>${idx}:${arr[idx]}</div>`)

*********************************배열 예시**************************************

var arr2=new Array();
        arr2.push("../image/food/2.jpg");
        arr2.push("../image/food/5.jpg");
        arr2.push("../image/animal/C1.png");
        arr2.push("../image/moviestar/5.jpg");

        //arr2 배열에 있는 이미지를 출력하시오(width="100" 으로 지정)
        document.write("<hr>");
        for(var myphoto of arr2){ //arr2의 값을 myphoto로 지정
            document.write(`<img width=100 src="${myphoto}">`);
        }
        document.write("<hr>");
        for(var idx in arr2){
            document.write(`<img width=100 src=${arr2[idx]}>`)
        }
        document.write("<hr>");
        for(var i=0;i<arr2.length;i++){
            document.write(`<img width="100"  src=${arr2[i]}>`)
        }

1~100까지의 숫자를 nums 배열에 25개 중복없이 담는 함수
 let nums = new Array(25);
    for (let i = 0; i < nums.length; i++) {
        nums[i] = parseInt(Math.random() * 100) + 1;
            for (let j = 0; j < i; j++)
            if (nums[i] == nums[j]) {
                i--;
                break; 
            }
    }
********************************************************************


querySelector로 id를 가져왔을땐(#id)-받을땐id.이나 this. 둘 다로 받아도됨
querySelector로 class를 가져왔을땐(.class)-받을땐 this. 로만 받아야됨

setTimeout:시간에 딱 한번                setInterval:(함수,시간) 시간마다 함수 반복
setInterval(()=>{                                               //setInterval 화살표함수 예제
	let idx=parseInt(Math.random()+5);
	console.log(arr[idx]);
}, 1000);       //1000=1초

*****************************엘리먼트(요소)값 얻기*******************************
1. var a = getElementById("아이디") : a는 특정 아이디에 대한 단일 요소값
2. var b = getElementsByClassName("happy") : b 는 클래스명이 happy인 요소들의 '배열'값
3. var c = getElementsByTagName("div") : c 는 태그명이 div인 요소들의 '배열'값
4. var d = quertySelector("selector(하위태그, 인풋타입의 텍스트)") : d는 selector에 해당하는 요소들 중 첫번째 요소값(배열아님)
    selector란 : "#nice" : 아이디 nice를 의미
                 ".nice" : 클래스 nice를 의미
                "b" : b 태그
                ".nice(>)b" : 클래스명이 nice인 태그의 모든 하위 b 태그들
5. var e = querySelectorAll("selector") : e는 selector 에 해당하는 모든 요소들(배열)
6. var f = parentElement() : 부모태그의 요소값
7. previousElementSibling() : 바로 전 요소값
8. nextElementSibling() : 바로 다음 요소값
*************************************************************************************

<input type="text" id="txtin" value="bitcamp"> // value가 초기입력값

table 다시 공부----------------
배열 다시 공부----------------("A"+i+"B")랑 (`A${i}B`)연습하기
for문 자세히 공부--------------

랜덤한 수(난수) 출력 예제
for(let i=1;i<=X;i++){
    let r=parseInt(Math.random()*100);
    console.log(r);
} //0~99까지의 난수 X개 출력

난수 중복처리 예제
var nums=new Array(5);
for(let i=0;i<nums.length;i++){             
    nums[i]=parseInt(Math.random()*10)+1;            //i번지 배열에 1~10사이의 난수값을 저장한다
 
    for(let j=0;j<i;j++){    //중복처리:이전 배열에 같은값이 있을 경우 다시 구한다
        if(nums[i]==nums[j]){
            i--;                 //break 후 i++로 이동 하므로 일단 1을 빼준다(다시 제자리로 가게하기 위해서)
            break;              //현재 for문을 빠져나간다
        }
    }
}console.log(nums); //출력

엔터입력에 반응하여 함수 예제
doccument.getElementById("ID").onkeyup = function(e){
	if(e.keyCode==13){
		let v= e.target.value; //this.value
		document.querySelector("A").innerHTML = v; //엔터키 입력하고 출력
	}
}



----------------------------조건식--------------------------------------------

-if(조건식);{         //if뒤()에 boolean(true 또는 false이 되는 식)타입이 옴
문장1; 
문장2; 
} 
문장3; 

-if(조건식);       //조건식에서 두 문장 이상일땐 { } 사용. 반복문도 마찬가지 
{ 
문장1; 
문장2; 
}else             //조건식이 아닐경우 else 로 
문장3; 

-if(조건식1) 
문장1; 
else if(조건식2)   //1이 안되면 2
문장2; 
else if(조건식3)   //1도 안되고 2도 안되면 3
문장3; 
else 
문장4; 

-switch(수식 또는 변수명){
case 정수 또는 문자열: 
문장1; 
break;       // 만약 다음 case도 실행하고자 할 경우는 break 생략 
               //여러개의 case 가 올 수 있다 
default: 
문장n;        // 위의  case에 해당 안될 경우 실행되는 영역 
} 


-----------------------반복문--------------------------------

-while(조건식){   //while 도  if와 같이 조건식은 true or false         //선 조건 비교 후 실행 
조건이 맞을 동안 실행할 문장들 
} 			//위의 조건이 거짓이 되는 순간 while 문을 빠져 나온다 

-do~while                    //선 실행 후 조건 비교(조건이 뒤에와 한번은 무조건 실행) 
do{
조건이 맞을 동안 실행할 문장들 
}while(조건식); 

<for  반복 횟수가 정해져있는 경우 많이 사용, 배열 같은 경우 
         초기값을 주고 증감식에 넣고 조건에 맞으면 실행 반복> 

-for(초기값 ; 조건식 ; 증감식){
문장; 
} 

-------------------반복문에서의 break와 continue--------------------
-whilce(조건식){
Break;          //반복문 빠져나감 
} 

-while(조건식){ 
코드1; 
코드2; 
continue; 
break;        //남은 코드를 실행하지 않고 조건식으로 이동한다 
코드3; 
} 

-for(초깃값 ; 조건식 ; 증감식){ 
문장1; 
문장2; 
continue;//남은 코드를 실행하지 않고 증감식으로 이동한다 
문장3; 
} 

------------------------------------------------------------------
jquery에서 attr은 <h1 style="magenta"> 에서 style에 접근
jquery에서 css는 css에 접근





































